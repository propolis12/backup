security:
    encoders:
        App\Security\User:
            algorithm: auto
        App\Entity\User:
            algorithm: auto


    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: username
        # used to reload user from session & other features (e.g. switch_user)
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false



        #login:
            #pattern: ^/api/login
            #stateless: true
            #anonymous: true
            #json_login:
                #check_path: /api/login_check
                #success_handler: lexik_jwt_authentication.handler.authentication_success
                #failure_handler: lexik_jwt_authentication.handler.authentication_failure




        #api:
            #pattern: ^/api/
            #stateless: true
            #guard:
                #authenticators:
                        #default
                    #- lexik_jwt_authentication.jwt_token_authenticator



        refresh:
            pattern: ^/api/token/refresh
            stateless: true
            anonymous: true

        main:
            anonymous: true
            lazy: true
            provider: app_user_provider
            guard:
                authenticators:
                    - App\Security\AuthAuthenticator
                entry_point: App\Security\AuthAuthenticator
            logout:
                path: app_logout







                    # where to redirect after logout
                    # target: app_any_route
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true
    #role_hierarchy:
        #ROLE_ADMIN: ROLE_USER
        #ROLE_SUPER_ADMIN: [ ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH ]

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/check_send/, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/token/refresh, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api,       roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/, roles: IS_AUTHENTICATED_FULLY }
